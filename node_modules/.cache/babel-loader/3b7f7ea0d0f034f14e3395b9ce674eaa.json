{"ast":null,"code":"var _jsxFileName = \"/home/amol/Amol Personal Projects/31-whether-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Weather from './app_component/weather.component';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\nconst API_KEY = '15425263b2c773fb1becc2ee0fe76deb'; // api.openweathermap.org/data/2.5/weather?q=London,uk\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calCelsius = temp => {\n      let cell = Math.floor(temp - 275.15);\n      return cell;\n    };\n\n    this.getWeather = async () => {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_KEY}`);\n      const response = await api_call.json();\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        icon: this.weatherIcon.Thunderstorm\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      icon: this.state.icon,\n      celsius: this.state.celsius,\n      temp_max: this.state.temp_max,\n      temp_min: this.state.temp_min,\n      description: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/amol/Amol Personal Projects/31-whether-app/src/App.js"],"names":["React","Component","Weather","API_KEY","App","constructor","calCelsius","temp","cell","Math","floor","getWeather","api_call","fetch","response","json","setState","city","name","country","sys","celsius","main","temp_max","temp_min","description","weather","icon","weatherIcon","Thunderstorm","state","undefined","error","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAO,sCAAP;AACA,OAAO,qCAAP;AAEA,MAAMC,OAAO,GAAC,kCAAd,C,CACA;;AACA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,GAAE;AACX;;AADW,SAyBbC,UAzBa,GAyBAC,IAAD,IAAQ;AAClB,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,MAAlB,CAAX;AACA,aAAOC,IAAP;AACD,KA5BY;;AAAA,SA8BbG,UA9Ba,GA8BA,YAAS;AACpB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oEAAmEV,OAAQ,EAA7E,CAA5B;AACE,YAAMW,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAEA,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEH,QAAQ,CAACI,IADH;AAEZC,QAAAA,OAAO,EAACL,QAAQ,CAACM,GAAT,CAAaD,OAFT;AAGZE,QAAAA,OAAO,EAAC,KAAKf,UAAL,CAAgBQ,QAAQ,CAACQ,IAAT,CAAcf,IAA9B,CAHI;AAIZgB,QAAAA,QAAQ,EAAC,KAAKjB,UAAL,CAAgBQ,QAAQ,CAACQ,IAAT,CAAcC,QAA9B,CAJG;AAKZC,QAAAA,QAAQ,EAAC,KAAKlB,UAAL,CAAgBQ,QAAQ,CAACQ,IAAT,CAAcE,QAA9B,CALG;AAMZC,QAAAA,WAAW,EAAEX,QAAQ,CAACY,OAAT,CAAiB,CAAjB,EAAoBD,WANrB;AAOZE,QAAAA,IAAI,EAAE,KAAKC,WAAL,CAAiBC;AAPX,OAAd;AASH,KA3CY;;AAEX,SAAKC,KAAL,GAAW;AACTb,MAAAA,IAAI,EAAEc,SADG;AAETZ,MAAAA,OAAO,EAAEY,SAFA;AAGTJ,MAAAA,IAAI,EAAEI,SAHG;AAITT,MAAAA,IAAI,EAAGS,SAJE;AAKTV,MAAAA,OAAO,EAACU,SALC;AAMTR,MAAAA,QAAQ,EAAEQ,SAND;AAOTP,MAAAA,QAAQ,EAACO,SAPA;AAQTN,MAAAA,WAAW,EAAC,EARH;AASTO,MAAAA,KAAK,EAAC;AATG,KAAX;AAWA,SAAKrB,UAAL;AAEA,SAAKiB,WAAL,GAAiB;AACfC,MAAAA,YAAY,EAAC,iBADE;AAEfI,MAAAA,OAAO,EAAE,UAFM;AAGfC,MAAAA,IAAI,EAAE,kBAHS;AAIfC,MAAAA,IAAI,EAAE,SAJS;AAKfC,MAAAA,UAAU,EAAE,QALG;AAMfC,MAAAA,KAAK,EAAE,cANQ;AAOfC,MAAAA,MAAM,EAAE;AAPO,KAAjB;AASD;;AAqBDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACI,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWb,IADrB;AAEI,MAAA,OAAO,EAAE,KAAKa,KAAL,CAAWX,OAFxB;AAGI,MAAA,IAAI,EAAE,KAAKW,KAAL,CAAWH,IAHrB;AAII,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWT,OAJxB;AAKI,MAAA,QAAQ,EAAE,KAAKS,KAAL,CAAWP,QALzB;AAMI,MAAA,QAAQ,EAAE,KAAKO,KAAL,CAAWN,QANzB;AAOI,MAAA,WAAW,EAAE,KAAKM,KAAL,CAAWL,WAP5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAaD;;AA5DyB;;AAiE5B,eAAerB,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport Weather from './app_component/weather.component';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\n\nconst API_KEY='15425263b2c773fb1becc2ee0fe76deb';\n// api.openweathermap.org/data/2.5/weather?q=London,uk\nclass App extends Component { \n  constructor(){\n    super();\n    this.state={\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main : undefined,\n      celsius:undefined,\n      temp_max: undefined,\n      temp_min:undefined,\n      description:\"\",\n      error:false\n    }\n    this.getWeather();\n\n    this.weatherIcon={\n      Thunderstorm:\"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    }\n  }\n  calCelsius =(temp)=>{\n    let cell = Math.floor(temp - 275.15);\n    return cell;\n  }\n\n  getWeather = async()=>{\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_KEY}`);\n      const response = await api_call.json();\n\n      this.setState({\n        city: response.name,\n        country:response.sys.country,\n        celsius:this.calCelsius(response.main.temp),\n        temp_max:this.calCelsius(response.main.temp_max),\n        temp_min:this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        icon :this.weatherIcon.Thunderstorm\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <Weather \n            city={this.state.city} \n            country={this.state.country} \n            icon={this.state.icon} \n            celsius={this.state.celsius} \n            temp_max={this.state.temp_max} \n            temp_min={this.state.temp_min} \n            description={this.state.description} \n          />\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}