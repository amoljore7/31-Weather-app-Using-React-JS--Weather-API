{"ast":null,"code":"var _jsxFileName = \"/home/amol/Amol Personal Projects/31-whether-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Form from \"./app_component/form.component\";\nimport Weather from './app_component/weather.component';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\nconst API_KEY = '15425263b2c773fb1becc2ee0fe76deb'; // api.openweathermap.org/data/2.5/weather?q=London,uk\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calCelsius = temp => {\n      let cell = Math.floor(temp - 275.15);\n      return cell;\n    };\n\n    this.getWeather = async () => {\n      e.preventDefault();\n      const country = e.target.elements.country.value;\n      const city = e.target.elements.city.value;\n\n      if (country && city) {\n        const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_KEY}`);\n        const response = await api_call.json();\n        this.setState({\n          city: response.name,\n          country: response.sys.country,\n          celsius: this.calCelsius(response.main.temp),\n          temp_max: this.calCelsius(response.main.temp_max),\n          temp_min: this.calCelsius(response.main.temp_min),\n          description: response.weather[0].description,\n          icon: this.weatherIcon.Thunderstorm\n        }); // seting icons\n\n        this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        this.setState({\n          icon: icons.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({\n          icon: icons.Drizzle\n        });\n        break;\n\n      case rangeId >= 500 && rangeId <= 521:\n        this.setState({\n          icon: icons.Rain\n        });\n        break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({\n          icon: icons.Snow\n        });\n        break;\n\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({\n          icon: icons.Atmosphere\n        });\n        break;\n\n      case rangeId === 800:\n        this.setState({\n          icon: icons.Clear\n        });\n        break;\n\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({\n          icon: icons.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: icons.Clouds\n        });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Form, {\n      loadweather: this.getWeather,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      icon: this.state.icon,\n      celsius: this.state.celsius,\n      temp_max: this.state.temp_max,\n      temp_min: this.state.temp_min,\n      description: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/amol/Amol Personal Projects/31-whether-app/src/App.js"],"names":["React","Component","Form","Weather","API_KEY","App","constructor","calCelsius","temp","cell","Math","floor","getWeather","e","preventDefault","country","target","elements","value","city","api_call","fetch","response","json","setState","name","sys","celsius","main","temp_max","temp_min","description","weather","icon","weatherIcon","Thunderstorm","get_WeatherIcon","id","error","state","undefined","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Form from \"./app_component/form.component\";\nimport Weather from './app_component/weather.component';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\n\nconst API_KEY='15425263b2c773fb1becc2ee0fe76deb';\n// api.openweathermap.org/data/2.5/weather?q=London,uk\n\nclass App extends Component { \n  constructor(){\n    super();\n    this.state={\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main : undefined,\n      celsius:undefined,\n      temp_max: undefined,\n      temp_min:undefined,\n      description:\"\",\n      error:false\n    }\n    this.getWeather();\n\n    this.weatherIcon={\n      Thunderstorm:\"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    }\n  }\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        this.setState({ icon: icons.Thunderstorm });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: icons.Drizzle });\n        break;\n      case rangeId >= 500 && rangeId <= 521:\n        this.setState({ icon: icons.Rain });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: icons.Snow });\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icon: icons.Atmosphere });\n        break;\n      case rangeId === 800:\n        this.setState({ icon: icons.Clear });\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icon: icons.Clouds });\n        break;\n      default:\n        this.setState({ icon: icons.Clouds });\n    }\n  }\n\n  calCelsius =(temp)=>{\n    let cell = Math.floor(temp - 275.15);\n    return cell;\n  }\n\n  getWeather = async()=>{\n    e.preventDefault();\n\n    const country = e.target.elements.country.value;\n    const city = e.target.elements.city.value;\n\n    if (country && city){\n\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_KEY}`);\n      const response = await api_call.json();\n\n      this.setState({\n        city: response.name,\n        country:response.sys.country,\n        celsius:this.calCelsius(response.main.temp),\n        temp_max:this.calCelsius(response.main.temp_max),\n        temp_min:this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        icon :this.weatherIcon.Thunderstorm\n      });\n\n      // seting icons\n      this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n    }\n    else{\n      this.setState({\n        error: true\n      });\n    }\n    \n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form loadweather={this.getWeather} error={this.state.error} />\n        <Weather \n            city={this.state.city} \n            country={this.state.country} \n            icon={this.state.icon} \n            celsius={this.state.celsius} \n            temp_max={this.state.temp_max} \n            temp_min={this.state.temp_min} \n            description={this.state.description} \n          />\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}