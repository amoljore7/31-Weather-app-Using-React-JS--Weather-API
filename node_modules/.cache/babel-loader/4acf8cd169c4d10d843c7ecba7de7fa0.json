{"ast":null,"code":"var _jsxFileName = \"/home/amol/Amol Personal Projects/31-whether-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Weather from './app_component/weather.component';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\nconst API_KEY = '15425263b2c773fb1becc2ee0fe76deb'; // api.openweathermap.org/data/2.5/weather?q=London,uk\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_KEY}`);\n      const response = await api_call.json();\n      this.setState({\n        city: response.name,\n        country: response.sys.country\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      icon: this.state.icon,\n      celsius: this.state.celsius,\n      temp_max: this.state.temp_max,\n      temp_min: this.state.temp_min,\n      description: this.state.descrip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/amol/Amol Personal Projects/31-whether-app/src/App.js"],"names":["React","Component","Weather","API_KEY","App","constructor","getWeather","api_call","fetch","response","json","setState","city","name","country","sys","state","undefined","icon","main","celsius","temp_max","temp_min","description","error","render","descrip"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAO,sCAAP;AACA,OAAO,qCAAP;AAEA,MAAMC,OAAO,GAAC,kCAAd,C,CACA;;AACA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,GAAE;AACX;;AADW,SAgBbC,UAhBa,GAgBA,YAAS;AACpB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oEAAmEL,OAAQ,EAA7E,CAA5B;AACE,YAAMM,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAEA,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEH,QAAQ,CAACI,IADH;AAEZC,QAAAA,OAAO,EAACL,QAAQ,CAACM,GAAT,CAAaD;AAFT,OAAd;AAIH,KAxBY;;AAEX,SAAKE,KAAL,GAAW;AACTJ,MAAAA,IAAI,EAAEK,SADG;AAETH,MAAAA,OAAO,EAAEG,SAFA;AAGTC,MAAAA,IAAI,EAAED,SAHG;AAITE,MAAAA,IAAI,EAAGF,SAJE;AAKTG,MAAAA,OAAO,EAACH,SALC;AAMTI,MAAAA,QAAQ,EAAEJ,SAND;AAOTK,MAAAA,QAAQ,EAACL,SAPA;AAQTM,MAAAA,WAAW,EAAC,EARH;AASTC,MAAAA,KAAK,EAAC;AATG,KAAX;AAWA,SAAKlB,UAAL;AACD;;AAYDmB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWJ,IAA1B;AAAgC,MAAA,OAAO,EAAE,KAAKI,KAAL,CAAWF,OAApD;AAA6D,MAAA,IAAI,EAAE,KAAKE,KAAL,CAAWE,IAA9E;AAAoF,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWI,OAAxG;AAAiH,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QAAtI;AAAgJ,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWM,QAArK;AAA+K,MAAA,WAAW,EAAE,KAAKN,KAAL,CAAWU,OAAvM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAjCyB;;AAsC5B,eAAetB,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport Weather from './app_component/weather.component';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\n\nconst API_KEY='15425263b2c773fb1becc2ee0fe76deb';\n// api.openweathermap.org/data/2.5/weather?q=London,uk\nclass App extends Component { \n  constructor(){\n    super();\n    this.state={\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main : undefined,\n      celsius:undefined,\n      temp_max: undefined,\n      temp_min:undefined,\n      description:\"\",\n      error:false\n    }\n    this.getWeather();\n  }\n\n  getWeather = async()=>{\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_KEY}`);\n      const response = await api_call.json();\n\n      this.setState({\n        city: response.name,\n        country:response.sys.country\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <Weather city={this.state.city} country={this.state.country} icon={this.state.icon} celsius={this.state.celsius} temp_max={this.state.temp_max} temp_min={this.state.temp_min} description={this.state.descrip} />\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}