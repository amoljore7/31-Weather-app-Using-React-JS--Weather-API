{"map":"{\"version\":3,\"sources\":[\"/home/amol/Amol Personal Projects/26-tic-tac-toe Game/src/components/Square.js\",\"/home/amol/Amol Personal Projects/26-tic-tac-toe Game/src/components/Board.js\",\"/home/amol/Amol Personal Projects/26-tic-tac-toe Game/src/components/Game.js\",\"/home/amol/Amol Personal Projects/26-tic-tac-toe Game/src/App.js\",\"/home/amol/Amol Personal Projects/26-tic-tac-toe Game/src/serviceWorker.js\",\"/home/amol/Amol Personal Projects/26-tic-tac-toe Game/src/index.js\"],\"names\":[\"Square\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"onClick\",\"value\",\"Board\",\"i\",\"_this\",\"this\",\"squares\",\"renderSquare\",\"Component\",\"Game\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"xIsNext\",\"stepNumber\",\"history\",\"Array\",\"fill\",\"step\",\"setState\",\"slice\",\"length\",\"calculateWinner\",\"concat\",\"status\",\"_this2\",\"current\",\"winner\",\"moves\",\"map\",\"move\",\"desc\",\"key\",\"jumpTo\",\"Board_Board\",\"handleClick\",\"lines\",\"_lines$i\",\"slicedToArray\",\"b\",\"c\",\"App\",\"Game_Game\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react'\\n\\nexport default function Square(props) {\\n    return (\\n        <button className=\\\"square\\\" onClick={props.onClick}>\\n            {props.value}\\n        </button>\\n    )\\n}\\n\",\"import React, { Component } from 'react';\\nimport Square from './Square';\\n\\nexport default class Board extends Component {\\n    renderSquare(i){\\n        return <Square value={this.props.squares[i]}\\n        onClick={()=>this.props.onClick(i)}\\n        />\\n    }\\n    render() {\\n        return (\\n            <div>\\n                <div className=\\\"border-row\\\">\\n                    {this.renderSquare(0)}\\n                    {this.renderSquare(1)}\\n                    {this.renderSquare(2)}\\n                </div>\\n                <div className=\\\"border-row\\\">\\n                    {this.renderSquare(3)}\\n                    {this.renderSquare(4)}\\n                    {this.renderSquare(5)}\\n                </div>\\n                <div className=\\\"border-row\\\">\\n                    {this.renderSquare(6)}\\n                    {this.renderSquare(7)}\\n                    {this.renderSquare(8)}\\n                </div>\\n                \\n            </div>\\n        )\\n    }\\n}\\n\",\"import React, { Component } from 'react'\\nimport Board from './Board';\\n\\nexport default class Game extends Component {\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            xIsNext: true,\\n            stepNumber: 0,\\n            history: [\\n                { squares: Array(9).fill(null) }\\n            ]\\n        }\\n    }\\n    jumpTo(step){\\n        this.setState({\\n            stepNumber: step,\\n            xIsNext: (step%2)===0\\n        })\\n    }\\n\\n    handleClick(i) {\\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\\n        const current = history[history.length - 1];\\n        const squares = current.squares.slice();\\n        const winner = calculateWinner(squares);\\n        if (winner || squares[i]) {\\n            return;\\n        }\\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\\n        this.setState({\\n            history: history.concat({\\n                squares: squares\\n            }),\\n            xIsNext: !this.state.xIsNext,\\n            stepNumber: history.length\\n        });\\n\\n    }\\n\\n    render() {\\n        const history = this.state.history;\\n        const current = history[this.state.stepNumber];\\n        const winner = calculateWinner(current.squares);\\n        const moves = history.map((step, move) => {\\n            const desc = move ? 'Go to #' + move : 'Start the Game';\\n            return (\\n                <li key={move}>\\n                    <button onClick={() => { this.jumpTo(move) }}>\\n                        {desc}\\n                    </button>\\n                </li>\\n            )\\n        });\\n        let status;\\n        if (winner) {\\n            status = 'Winner is ' + winner;\\n        } else {\\n            status = 'Next Player is ' + (this.state.xIsNext ? 'X' : 'O');\\n        }\\n\\n\\n        return (\\n            <div className=\\\"game\\\">\\n                <div className=\\\"game-board\\\">\\n                    <Board onClick={(i) => this.handleClick(i)}\\n                        squares={current.squares} />\\n                </div>\\n                <div className=\\\"game-info\\\">\\n                    <div>{status}</div>\\n                    <ul>{moves}</ul>\\n                </div>\\n\\n            </div>\\n        )\\n    }\\n}\\n\\nfunction calculateWinner(squares) {\\n    const lines = [\\n        [0, 1, 2],\\n        [3, 4, 5],\\n        [6, 7, 8],\\n        [0, 3, 6],\\n        [1, 4, 7],\\n        [2, 5, 8],\\n        [0, 4, 8],\\n        [2, 4, 6]\\n    ];\\n\\n    for (let i = 0; i < lines.length; i++) {\\n        const [a, b, c] = lines[i];\\n        if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\\n            return squares[a];\\n        }\\n    }\\n\\n    return null;\\n}\",\"import React from 'react';\\nimport './App.css';\\nimport Game from './components/Game';\\n\\nfunction App() {\\n  return (\\n   <Game />\\n  );\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,r){},15:function(e,t,r){},16:function(e,t,r){\"use strict\";r.r(t);var n=r(0),a=r.n(n),s=r(7),i=r.n(s),o=(r(14),r(15),r(8)),u=r(1),c=r(2),l=r(4),h=r(3),m=r(5);function d(e){return a.a.createElement(\"button\",{className:\"square\",onClick:e.onClick},e.value)}var v=function(e){function t(){return Object(u.a)(this,t),Object(l.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"renderSquare\",value:function(e){var t=this;return a.a.createElement(d,{value:this.props.squares[e],onClick:function(){return t.props.onClick(e)}})}},{key:\"render\",value:function(){return a.a.createElement(\"div\",null,a.a.createElement(\"div\",{className:\"border-row\"},this.renderSquare(0),this.renderSquare(1),this.renderSquare(2)),a.a.createElement(\"div\",{className:\"border-row\"},this.renderSquare(3),this.renderSquare(4),this.renderSquare(5)),a.a.createElement(\"div\",{className:\"border-row\"},this.renderSquare(6),this.renderSquare(7),this.renderSquare(8)))}}]),t}(n.Component),f=function(e){function t(e){var r;return Object(u.a)(this,t),(r=Object(l.a)(this,Object(h.a)(t).call(this,e))).state={xIsNext:!0,stepNumber:0,history:[{squares:Array(9).fill(null)}]},r}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"jumpTo\",value:function(e){this.setState({stepNumber:e,xIsNext:e%2===0})}},{key:\"handleClick\",value:function(e){var t=this.state.history.slice(0,this.state.stepNumber+1),r=t[t.length-1].squares.slice();b(r)||r[e]||(r[e]=this.state.xIsNext?\"X\":\"O\",this.setState({history:t.concat({squares:r}),xIsNext:!this.state.xIsNext,stepNumber:t.length}))}},{key:\"render\",value:function(){var e,t=this,r=this.state.history,n=r[this.state.stepNumber],s=b(n.squares),i=r.map(function(e,r){var n=r?\"Go to #\"+r:\"Start the Game\";return a.a.createElement(\"li\",{key:r},a.a.createElement(\"button\",{onClick:function(){t.jumpTo(r)}},n))});return e=s?\"Winner is \"+s:\"Next Player is \"+(this.state.xIsNext?\"X\":\"O\"),a.a.createElement(\"div\",{className:\"game\"},a.a.createElement(\"div\",{className:\"game-board\"},a.a.createElement(v,{onClick:function(e){return t.handleClick(e)},squares:n.squares})),a.a.createElement(\"div\",{className:\"game-info\"},a.a.createElement(\"div\",null,e),a.a.createElement(\"ul\",null,i)))}}]),t}(n.Component);function b(e){for(var t=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]],r=0;r<t.length;r++){var n=Object(o.a)(t[r],3),a=n[0],s=n[1],i=n[2];if(e[a]&&e[a]===e[s]&&e[s]===e[i])return e[a]}return null}var p=function(){return a.a.createElement(f,null)};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(a.a.createElement(p,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},9:function(e,t,r){e.exports=r(16)}},[[9,1,2]]]);","extractedComments":[]}